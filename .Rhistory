knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
data_frame <- list.files(path="billboard_data/", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
install.packages("readr")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
data_frame <- list.files(path="billboard_data/", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
head(data_frame)
library(dplyr)
library(readr)
data_frame <- list.files(path="billboard_data/", full.names = TRUE, show_col_types = FALSE) %>%
lapply(read_csv) %>%
bind_rows
data_frame_unique <-  data_frame[!duplicated(data_frame$title),]
head(data_frame_unique)
length(data_frame_unique)
# Summary statistics
summary(data_frame_unique)
# We want to know which song by which artist has featured on the chart
# So keep only two columns - title & artist
hit_songs <- subset(data_frame_unique, select = c(title, artist))
head(hit_songs)
write.csv(hit_songs, 'hit_songs_2000_20210925.csv', row.names = FALSE)
hit_songs.Define("hit", 1)
hit_songs$hit <-  rep(1, nrow(hit_songs))
head(hit_songs)
write.csv(hit_songs, 'hit_songs_2000_20210925.csv', row.names = FALSE)
head(hitsong)
hitsong <- list.files(path="billboard_data/", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
data_frame <- list.files(path="billboard_data/", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
hitsong <- list.files(path="billboard_data/", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
hitsong <- list.files(path="billboard_data/", full.names = TRUE) %>%
lapply(read_csv, show_col_types = FALSE) %>%
bind_rows
head(hitsong)
str(hitsong)
head(hitsong)
# Remove duplicated rows since songs can feature on the chart for weeks
hitsong <- hitsong[!duplicated(hitsong$title),]
# Remove useless columns - isNew, last, peak, week
hitsong<- subset(hitsong, select = c(title, artist))
head(hit_songs)
head(hitsongs)
head(hitsong)
hitsong$hit <-  rep(1, nrow(hitsong))
head(hitsong)
# Split artist into multiple columns in case it is a collab song
library(tidyr)
hitsong_clean <- hitsong %>%
separate(artist, into = c("artist", "artist_sub"), sep = "\\Featuring")
hitsong_clean <- hitsong %>%
separate(artist, into = c("artist", "artist_sub"), sep = "Featuring")
head(hitsong_clean)
hitsong_clean <- hitsong %>%
separate(artist, into = c("artist", "artist_sub"),
sep = "\\s*Featuring\\s*|\\s*X\\s*|\\s*x\\s*|\\s*&\\s*")
head(hitsong_clean)
st.files(path="song-release/", full.names = TRUE) %>%
lapply(read_csv, show_col_types = FALSE) %>%
bind_rows
head(song_release)
song_release <- list.files(path="song_release/", full.names = TRUE) %>%
lapply(read_csv, show_col_types = FALSE) %>%
bind_rows
head(song_release)
ng_release/", full.names = TRUE) %>%
lapply(read_csv, header=FALSE, show_col_types = FALSE) %>%
bind_rows
head(song_release)
song_release <- list.files(path="song_release/", full.names = TRUE) %>%
lapply(read_csv, header=FALSE, show_col_types = FALSE) %>%
bind_rows
head(song_release)
# Concat song release data
song_release <- list.files(path="song_release/", full.names = TRUE) %>%
lapply(read_csv, header=FALSE, show_col_types = FALSE) %>%
bind_rows
# Concat song release data
song_release <- list.files(path="song_release/", full.names = TRUE) %>%
lapply(read_csv(header=FALSE), show_col_types = FALSE) %>%
bind_rows
# Concat song release data
song_release <- list.files(path="song_release/", full.names = TRUE) %>%
lapply(read_csv, col_names = FALSE, show_col_types = FALSE) %>%
bind_rows
head(song_release)
colnames(song_release) <- c("title", "artist")
head(song_release)
total <- merge(song_release, hitsong_clean, by = c("title", "artist"))
head(total)
total <- merge(song_release, hitsong_clean, by = c("title", "artist"), all.x = TRUE)
head(total)
# Drop artist_sub
total <- subset(toal, select = -c(artist_sub))
# Drop artist_sub
total <- subset(total, select = -c(artist_sub))
head(hitsong)
head(total)
head(total)
# Label non-hit songs hit -0
total$hit[is.na(total$hit)] <- 0
head(total)
summarise(total)
summary(total)
table(total$hit)
# Output to a csv file
write.csv(total, 'total_songs_2000_2021.csv', row.names = FALSE)
